[{"C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\index.tsx":"1","C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\App.tsx":"2","C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\components\\FlipMenu.tsx":"3","C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\components\\BuyPage.tsx":"4","C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\components\\PostPage.tsx":"5","C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\components\\Header.tsx":"6","C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\components\\Menu.tsx":"7"},{"size":505,"mtime":1677530224226,"results":"8","hashOfConfig":"9"},{"size":667,"mtime":1677530224180,"results":"10","hashOfConfig":"9"},{"size":643,"mtime":1677530224185,"results":"11","hashOfConfig":"9"},{"size":581,"mtime":1677557194175,"results":"12","hashOfConfig":"9"},{"size":245,"mtime":1677530224221,"results":"13","hashOfConfig":"9"},{"size":258,"mtime":1677530224192,"results":"14","hashOfConfig":"9"},{"size":4225,"mtime":1677530224199,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"14e0ly",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"19"},"C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\index.tsx",[],[],[],"C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\App.tsx",[],[],"C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\components\\FlipMenu.tsx",[],[],"C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\components\\BuyPage.tsx",[],[],"C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\components\\PostPage.tsx",["40"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function PostPage() {\r\n\r\n    //Build more structure\r\n    return (\r\n        <input type='text' placeholder='Title' className='post-title' />\r\n\r\n    )\r\n}","C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\components\\Header.tsx",[],[],"C:\\Users\\joann\\google drive\\GitHub\\decor-gator\\decor-gator-frontend\\src\\components\\Menu.tsx",["41","42"],[],"import React, {createRef} from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Menu.css'\r\n\r\nexport default function Menu({onClick} : {onClick:React.MouseEventHandler<HTMLButtonElement>}) {\r\n    \r\n    const loginEmailRef = React.createRef<HTMLInputElement>()\r\n    const loginPasswordRef = React.createRef<HTMLInputElement>()\r\n\r\n    const signupFirstNameRef = React.createRef<HTMLInputElement>()\r\n    const signupLastNameRef = React.createRef<HTMLInputElement>()\r\n    const signupEmailRef = React.createRef<HTMLInputElement>()\r\n    const signupPasswordRef = React.createRef<HTMLInputElement>()\r\n\r\n    const navigate = useNavigate();\r\n    const goToBuyPage = () => { //check if user is authenticated\r\n        navigate('/BuyPage');\r\n    }\r\n\r\n    function handleLogin() {\r\n\r\n        if (loginEmailRef.current && loginPasswordRef.current) {\r\n            fetch('http://localhost:8080/users/'+loginEmailRef.current.value).then((res) => {\r\n                return res.json()\r\n            }).then((response) => {\r\n                console.log(response)\r\n                if (response.message === \"SUCCESS\"){ //Need to edit the condition based on what respoonse is\r\n                    alert(\"Login successful!\");\r\n                    goToBuyPage();\r\n                }\r\n\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n            console.log(loginEmailRef.current.value)\r\n            console.log(loginPasswordRef.current.value)\r\n        }\r\n        {/* DELETE THIS vv after testing sign-up request */}\r\n        goToBuyPage();\r\n    }\r\n\r\n    function handleSignup() {\r\n        if (signupFirstNameRef.current && signupLastNameRef.current && signupEmailRef.current && signupPasswordRef.current) {\r\n            console.log(signupFirstNameRef.current.value)\r\n            console.log(signupLastNameRef.current.value)\r\n            console.log(signupEmailRef.current.value)\r\n            console.log(signupPasswordRef.current.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n  \r\n        <div className = 'menu'>\r\n            \r\n            <div className = 'menu-back-signup'>\r\n                <h2 className = 'signup-title'>Sign Up</h2>\r\n\r\n                <div className = 'signup-name-headers'>\r\n                    <label className=\"first-name-text\">First Name</label>\r\n                    <label className=\"last-name-text\">Last Name</label>\r\n                </div>\r\n\r\n                <div className = 'signup-name-inputs'>\r\n                    <input ref={signupFirstNameRef} type='text' placeholder='First Name' className=\"signup-box-small\"/>\r\n                    <input ref={signupLastNameRef} type='text' placeholder='Last Name' className=\"signup-box-small\"/>\r\n                </div>\r\n                \r\n                <label className=\"signup-text\">Email</label>\r\n                <input ref={signupEmailRef} type='text' placeholder='Email' className=\"login-box\"/>\r\n\r\n                <label className=\"signup-text\">Password</label>\r\n                <input ref={signupPasswordRef} type='password' placeholder='Password' className=\"login-box\"/>\r\n\r\n                <button type=\"submit\" className=\"signup-button\" onClick = {handleSignup}>\r\n                    SIGN UP\r\n                </button>\r\n\r\n                <button className = 'flip-button' onClick = {onClick}>\r\n                    Already have an account? LOG IN\r\n                </button>\r\n            </div>\r\n\r\n            <div className = 'menu-front-login'>\r\n                <h2 className = 'login-title'>Login</h2>\r\n\r\n                <label className=\"login-text\">Email</label>\r\n                <input ref={loginEmailRef} type='text' placeholder='Email' className=\"login-box\"/>\r\n\r\n                <label className=\"login-text\">Password</label>\r\n                <input ref={loginPasswordRef} type='password' placeholder='Password' className=\"login-box\"/>\r\n                \r\n                <button type=\"submit\" onClick = {handleLogin} className=\"login-button\"> \r\n                    SIGN IN\r\n                </button>\r\n\r\n                <button className = 'flip-button' onClick = {onClick}>\r\n                    Don't have an account? SIGN UP\r\n                </button>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n};",{"ruleId":"43","severity":1,"message":"44","line":2,"column":10,"nodeType":"45","messageId":"46","endLine":2,"endColumn":21},{"ruleId":"43","severity":1,"message":"47","line":1,"column":16,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"49","line":38,"column":9,"nodeType":"50","messageId":"51","endLine":38,"endColumn":61},"@typescript-eslint/no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'createRef' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]